{"version":3,"sources":["meteor://ðŸ’»app/imports/api/stuff/index.js","meteor://ðŸ’»app/imports/api/stuff/stuff.js","meteor://ðŸ’»app/imports/startup/both/index.js","meteor://ðŸ’»app/imports/startup/server/accounts.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/startup/server/stuff.js","meteor://ðŸ’»app/server/main.js"],"names":["module","link","export","Stuffs","StuffSchema","Mongo","v","SimpleSchema","default","Tracker","Collection","name","String","location","time","interest","image","description","tracker","attachSchema","Meteor","Accounts","Roles","createUser","email","password","role","console","log","userID","username","addUsersToRoles","users","find","count","settings","defaultAccounts","map","addData","data","insert","defaultData","publish","userId","ready"],"mappings":"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","file":"/app.js","sourcesContent":["import './stuff.js';\n","import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\nimport { Tracker } from 'meteor/tracker';\n\n/** Create a Meteor collection. */\nconst Stuffs = new Mongo.Collection('Stuffs');\n\n/** Create a schema to constrain the structure of documents associated with this collection. */\nconst StuffSchema = new SimpleSchema({\n  name: String,\n  location: String,\n  time: String,\n  interest: String,\n  image: String,\n  description: String,\n}, { tracker: Tracker });\n\n/** Attach this schema to the collection. */\nStuffs.attachSchema(StuffSchema);\n\n/** Make the collection and schema available to other code. */\nexport { Stuffs, StuffSchema };\n","import '/imports/api/stuff';\n","import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Roles } from 'meteor/alanning:roles';\n\n/* eslint-disable no-console */\n\nfunction createUser(email, password, role) {\n  console.log(`  Creating user ${email}.`);\n  const userID = Accounts.createUser({\n    username: email,\n    email: email,\n    password: password,\n  });\n  if (role === 'admin') {\n    Roles.addUsersToRoles(userID, 'admin');\n  }\n}\n\n/** When running app for first time, pass a settings file to set up a default user account. */\nif (Meteor.users.find().count() === 0) {\n  if (Meteor.settings.defaultAccounts) {\n    console.log('Creating the default user(s)');\n    Meteor.settings.defaultAccounts.map(({ email, password, role }) => createUser(email, password, role));\n  } else {\n    console.log('Cannot initialize the database!  Please invoke meteor with a settings file.');\n  }\n}\n","import './accounts.js';\nimport './stuff.js';\n","import { Meteor } from 'meteor/meteor';\nimport { Stuffs } from '../../api/stuff/stuff.js';\n\n/** Initialize the database with a default data document. */\nfunction addData(data) {\n  console.log(`  Adding: ${data.name}`);\n  Stuffs.insert(data);\n}\n\n/** Initialize the collection if empty. */\nif (Stuffs.find().count() === 0) {\n  if (Meteor.settings.defaultData) {\n    console.log('Creating default data.');\n    Meteor.settings.defaultData.map(data => addData(data));\n  }\n}\n\n/** This subscription publishes only the documents associated with the logged in user */\nMeteor.publish('Stuff', function publish() {\n  if (this.userId) {\n    return Stuffs.find();\n  }\n  return this.ready();\n});\n","import '/imports/startup/both';\nimport '/imports/startup/server';\n"]}